@model MvcLibrary.Models.Book
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CoverImage)
        </dt>
        <dd class = "col-sm-10">
            <img src="@Url.Content(Model.CoverImage)" style="height:30px; width:30px" />
            @* @Html.DisplayFor(model => model.CoverImage) *@
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Publisher)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Publisher)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PublicationDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PublicationDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ISBN)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ISBN)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PageCount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PageCount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsAvailable)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsAvailable)
        </dd>
        @if (!Model.IsAvailable)
        {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserCheckedOut)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserCheckedOut)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DueDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DueDate)
        </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
    </dl>
</div>
<div>
    @if (Model.IsAvailable)
    {
        <a asp-action="CheckOut" asp-route-id="@Model?.Id">Check Out</a>
    }
    else
    {
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
        {
            <a asp-action="CheckIn" asp-route-id="@Model?.Id">Check In</a>
        }
        else
        {
            <p>Checked out</p>
        }
    }
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">| Edit</a>
        <a asp-action="Index">| Back to List</a>
    }
</div>
